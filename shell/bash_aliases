#!/bin/bash

# ----------------------------------------------------------------------
# | Navigation                                                         |
# ----------------------------------------------------------------------

alias ~="cd ~"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cd..="cd .."


# ----------------------------------------------------------------------
# | Shortcuts                                                          |
# ----------------------------------------------------------------------

alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias p="cd ~/Documents/projects"
alias g="git"
alias h="history"
alias j="jobs"
alias hm="cd ~/"
alias dot="cd ~/.dotfiles"
alias pyv="cd ~/.virtualenvs"

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Gzip-enabled `curl`
alias gurl='curl --compressed'

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"


#make ls pretty

alias ls="ls -F -color"
alias l="ls -lAh -color"
alias ll="ls -l -color"
alias la='ls -A -color'

if [ "$OS" != "osx" ]; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
fi
# Pipe my public key to my clipboard.
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"
alias gitkey="more ~/Documents/Keys/git.txt | pbcopy | echo '=> Git key copied to pasteboard.'"


# The rest of my fun git aliases
alias gl='git pull --prune'
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gp='git push origin HEAD'
alias gd='git diff'
alias gc='git commit'
alias gca='git commit -a'
alias gco='git checkout'
alias gcb='git copy-branch-name'
alias gb='git branch'
alias gs='git status -sb' # upgrade your git if -sb breaks for you. it's fun.


# ----------------------------------------------------------------------
# | Network                                                            |
# ----------------------------------------------------------------------

alias ip="dig +short myip.opendns.com @resolver1.opendns.com"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ "$OS" == "osx" ]; then
    alias local-ip="ipconfig getifaddr en1"
elif [ "$OS" == "ubuntu" ]; then
    alias local-ip="ifconfig | \
                   grep 'inet addr' | \
                   grep -v '127.0.0.1' | \
                   cut -d: -f2 | \
                   cut -d' ' -f1"
fi


# ----------------------------------------------------------------------
# | Package Managers                                                   |
# ----------------------------------------------------------------------

# npm
# https://docs.npmjs.com/

if [ -x "$(command -v npm)" ]; then
    alias npmi="npm install"
    alias npmr="npm uninstall"
    alias npms="npm search"
    alias npmu="npm update"
fi


# Use `hub` as our git wrapper:
#   http://defunkt.github.com/hub/
hub_path=$(which hub)
if [ "$hub_path" ]; then
    alias git=$hub_path
fi

# The rest of my fun git aliases
alias gl='git pull --prune'
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gp='git push origin HEAD'
alias gd='git diff'
alias gc='git commit'
alias gca='git commit -a'
alias gco='git checkout'
alias gcb='git copy-branch-name'
alias gb='git branch'
alias gs='git status -sb' # upgrade your git if -sb breaks for you. it's fun.



# ----------------------------------------------------------------------
# | Python                                                             |
# ----------------------------------------------------------------------

# remove pyc files
alias pyclean='find . -type f -name "*.py[co]" -exec rm -r \{\} \; && find . -type d -name "__pycache__" | xargs rm -rf && echo "Removed pycs and __pycache__"'

if [ "$OS" == "osx" ]; then
    #py2 virtualenv
    alias mkenv2='mkvirtualenv --python=/usr/local/bin/python'
    #py3 virtualenv
    alias mkenv3='mkvirtualenv --python=/usr/local/bin/python3'
elif [ "$OS" == "ubuntu" ]; then
    #py2 virtualenv
    alias mkenv2='mkvirtualenv --python=/usr/bin/python'
    #py3 virtualenv
    alias mkenv3='mkvirtualenv --python=/usr/bin/python3'
fi


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# OS specific package managers

if [ "$OS" == "osx" ]; then

    # Homebrew
    # http://brew.sh/

    if [ -x "$(command -v brew)" ]; then
        alias brewd="brew doctor"
        alias brewi="brew install"
        alias brewr="brew uninstall"
        alias brews="brew search"
        alias brewu="brew update &&  \
                     brew upgrade && \
                     brew cleanup"
    fi

elif [ "$OS" == "ubuntu" ]; then

    # Advanced Packaging Tool

    alias apti="sudo apt-get install"
    alias aptr="sudo apt-get remove"
    alias apts="sudo apt-cache search"
    alias aptu="sudo apt-get update && \
                sudo apt-get upgrade"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Update

if [ "$OS" == "osx" ]; then
    alias update="sudo softwareupdate --install --all && \
                  brewu && \
                  npmi -g npm && \
                  npmu -g"
elif [ "$OS" == "ubuntu" ]; then
    alias update="aptu && \
                  npmi -g npm && \
                  npmu -g"
fi

# ----------------------------------------------------------------------
# | Shorter Commands                                                   |
# ----------------------------------------------------------------------

alias :q="exit"
alias c="clear"
alias ch="history -c && > ~/.bash_history"
alias e="vim"
alias g="git"
alias ll="ls -l"
alias m="man"
alias map="xargs -n1"
alias q="exit"
alias rm="rm -rf"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Copy to clipboard

if [ "$OS" == "osx" ]; then
    alias cc="pbcopy"
elif [ "$OS" == "ubuntu" ]; then
    alias cc="xclip -selection clip"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Empty Trash

if [ "$OS" == "osx" ]; then

    # Empty the trash, the main HDD and on all mounted volumes
    # and clear Apple’s system logs to improve shell startup speed

    alias empty-trash="sudo rm -frv /Volumes/*/.Trashes && \
                      sudo rm -frv ~/.Trash &&
                      sudo rm -frv /private/var/log/asl/*.asl"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Hide/Show files

if [ "$OS" == "osx" ]; then

    # Hide/Show desktop icons
    alias hide-desktop-icons="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
    alias show-desktop-icons="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

    # Hide/Show hidden files in Finder
    alias hide-hidden-files="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
    alias show-hidden-files="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"

elif [ "$OS" == "ubuntu" ]; then

    # Hide/Show desktop icons
    alias hide-desktop-icons="gsettings set org.gnome.desktop.background show-desktop-icons false"
    alias show-desktop-icons="gsettings set org.gnome.desktop.background show-desktop-icons true"

fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Lock screen

if [ "$OS" == "osx" ]; then
    alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Open

if [ "$OS" == "osx" ]; then
    alias o="open"
elif [ "$OS" == "ubuntu" ]; then
    alias o="xdg-open"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ "$OS" == "osx" ]; then
    alias use-node="brew unlink iojs && brew link --force node"
    alias use-iojs="brew unlink node && brew link --force iojs"
fi

alias reload!='source ~/.bashrc'

if [ "$OS" == "osx" ]; then
    # Kill all the tabs in Chrome to free up memory
    # [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
    alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

    # Lock the screen (when going AFK)
    alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

    # Disable Spotlight
    alias spotoff="sudo mdutil -a -i off"
    # Enable Spotlight
    alias spoton="sudo mdutil -a -i on"
    alias stfu="osascript -e 'set volume output muted true'"
    alias pumpitup="osascript -e 'set volume 7'"
    alias hax="growlnotify -a 'Activity Monitor' 'System error' -m 'WTF R U DOIN'"
    alias ios="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"
fi

alias sc='script/console'
alias sg='script/generate'
alias sd='script/destroy'

#Python bindings
# remove pyc files
alias pyclean='find . -type f -name "*.py[co]" -exec rm -f \{\} \; && find . -type d -name "__pycache__" | xargs rm -f && echo "Removed pycs and __pycache__"'

#py2 virtualenv
alias mkenv2='mkvirtualenv --python=/usr/local/bin/python'
#py3 virtualenv
alias mkenv3='mkvirtualenv --python=/usr/local/bin/python3'
